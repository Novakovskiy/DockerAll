version: "3.2"

#volumes:
#  postgres_data:
#  postgres_pgadmin:

services:

  php-fpm:
    image: interpol/php-fpm:7.4
    restart: always
    container_name: php-fpm
    working_dir: /application
    env_file: .env
    volumes:
      - ./application:${APP_PATH}
      - ./docker/php-fpm/logs:/logs
      - ./docker/php-fpm/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf:ro
      - ./docker/php-fpm/php.ini-development:/usr/local/etc/php/php.ini:ro
#      - ./docker/php-fpm/php.ini-production:/usr/local/etc/php/php.ini:ro

#  apache:
#    image: httpd:alpine
#    restart: always
#    container_name: apache
#    working_dir: /application
#    env_file: .env
#    volumes:
#      - ./application:${APP_PATH}
#      - ./docker/apache2/logs:/logs
#      - ./docker/apache2/httpd.conf:/usr/local/apache2/conf/httpd.conf:ro
#      - ./docker/apache2/extra/httpd-logs.conf:/usr/local/apache2/conf/extra/httpd-logs.conf:ro
#      - ./docker/apache2/extra/httpd-php.conf:/usr/local/apache2/conf/extra/httpd-php.conf:ro
#      - ./docker/apache2/extra/httpd-ssl.conf:/usr/local/apache2/conf/extra/httpd-ssl.conf:ro
#      - ./docker/ssl/server.crt:/ssl/server.crt:ro
#      - ./docker/ssl/server.key:/ssl/server.key:ro
##      - ./docker/apache2/extra/httpd-vhosts.conf:/usr/local/apache2/conf/extra/httpd-vhosts.conf:ro
##      - ./docker/apache2/extra/httpd-info.conf:/usr/local/apache2/conf/extra/httpd-info.conf:ro # Server status /server-status and server info /server-info
##    ports:
##      - "80:80"
##      - "443:443"
#    depends_on:
#      - php-fpm

  nginx:
    image: nginx:alpine
    restart: always
    container_name: nginx
    working_dir: /application
    env_file: .env
    volumes:
      - ./application:${APP_PATH}
      - ./docker/nginx/logs:/logs
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./docker/ssl/server.crt:/ssl/server.crt:ro
      - ./docker/ssl/server.key:/ssl/server.key:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - php-fpm

#  mysql:
#    image: mariadb:10.5
#    restart: always
#    container_name: mysql
#    volumes:
#      - ./docker/mariadb/data:/var/lib/mysql
#      - ./docker/mariadb/my.cnf:/etc/mysql/my.cnf.my:ro
#    command: >
#      bash -c "
#      cp /etc/mysql/my.cnf.my /etc/mysql/my.cnf
#      && chmod 644 /etc/mysql/my.cnf
#      && /entrypoint.sh mysqld
#      "
#    environment:
#      - MYSQL_ROOT_PASSWORD=Asdf1234
##      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
##      - MYSQL_RANDOM_ROOT_PASSWORD=yes
##      - MYSQL_DATABASE=my_db
##      - MYSQL_USER=my_user
##      - MYSQL_PASSWORD=my_pass
#    ports:
#      - "3306:3306"

#  phpmyadmin:
#    image: phpmyadmin/phpmyadmin
#    restart: always
#    container_name: phpmyadmin
#    environment:
#      - PMA_HOST=mysql
#      - PMA_PORT=3306
#      - MYSQL_ROOT_PASSWORD=Asdf1234
##      - MYSQL_USER=my_user
##      - MYSQL_PASSWORD=my_pass
#    ports:
#      - "8080:80"

#  mysql:
#    image: mysql:8.0
#    restart: always
#    container_name: mysql
#    volumes:
#      - ./docker/mysql/data:/var/lib/mysql
#      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf.my:ro
#    command: >
#      bash -c "
#      cp /etc/mysql/my.cnf.my /etc/mysql/my.cnf
#      && chmod 644 /etc/mysql/my.cnf
#      && /entrypoint.sh mysqld
#      "
#    environment:
#      - MYSQL_ROOT_PASSWORD=Asdf1234
##      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
##      - MYSQL_RANDOM_ROOT_PASSWORD=yes
##      - MYSQL_ONETIME_PASSWORD=yes
##      - MYSQL_DATABASE=my_db
##      - MYSQL_USER=my_user
##      - MYSQL_PASSWORD=my_pass
#    ports:
#      - "3306:3306"

#  postgres:
#    image: postgres:alpine
#    restart: always
#    container_name: postgres
#    volumes:
#      - postgres_data:/var/lib/postgresql/data
#      # Next line uncomment after first start if needed
##      - ./docker/postgres/postgresql.conf:/var/lib/postgresql/data/postgresql.conf
#    environment:
#      - POSTGRES_USER=postgres
#      - POSTGRES_PASSWORD=Asdf1234
#      - POSTGRES_DB=postgres
#    ports:
#      - "5432:5432"

#  pgadmin:
#    image: dpage/pgadmin4
#    restart: always
#    container_name: pgadmin
#    volumes:
#      - postgres_pgadmin:/var/lib/pgadmin
#    environment:
#      - PGADMIN_DEFAULT_EMAIL=dev@localhost
#      - PGADMIN_DEFAULT_PASSWORD=Asdf1234
#    ports:
#      - "8080:80"

#  mssql:
#    image: mcr.microsoft.com/mssql/server
#    restart: always
#    container_name: mssql
#    volumes:
#      - ./docker/mssql/data:/var/opt/mssql/data
#      - ./docker/mssql/log:/var/opt/mssql/log
#    environment:
#      - ACCEPT_EULA=Y
#      - SA_PASSWORD=Asdf1234
#      - MSSQL_PID=Developer
#    ports:
##      - "135:135"
#      - "1433:1433"
##      - "1434:1434"
##      - "2382:2382"
##      - "2383:2383"
##      - "4022:4022"
##      - "7022:7022"

#  mssql-tools:
#    image: mcr.microsoft.com/mssql-tools
#    restart: always
#    container_name: mssql-tools

#  mongo:
#    image: mongo
#    container_name: mongo
#    environment:
#      - MONGO_INITDB_ROOT_USERNAME=mongo
#      - MONGO_INITDB_ROOT_PASSWORD=Asdf1234
##      - MONGO_INITDB_DATABASE=my_db
#    ports:
#      - "27017:27017"

#  memcached:
#    image: memcached:alpine
#    container_name: memcached
#    command: memcached -m 64

#  redis:
#    image: redis:alpine
#    container_name: redis

#  mailhog:
#    image: mailhog/mailhog:latest
#    container_name: mailhog
#    ports:
#      - "8025:8025"
#  # SMTP server starts on port 1025
